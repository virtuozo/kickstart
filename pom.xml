<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>hitz</groupId>
  <artifactId>kick-start</artifactId>
  <version>1.0.0</version>
  <name>Virtuozo Kick Start Project</name>
  <packaging>war</packaging>

  <properties>
    <webappDirectory>${project.build.directory}/${project.build.finalName}</webappDirectory>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java.compiler.version>1.6</java.compiler.version>
    <main.package>hitz.virtuozo.kickstart</main.package>
    
    <!-- GWT Properties -->
    <gwt.version>2.6.1</gwt.version>
    <gwt.style>PRETTY</gwt.style> <!-- OBF[USCATED], PRETTY, DETAILED default: OBF -->
    <messages.bundle>${main.package}.i18n.Messages</messages.bundle>
    <constants.bundle>${main.package}.i18n.Constants</constants.bundle>
    <log.level>TRACE</log.level>
    <optimization.level>9</optimization.level>
    <local.workers>2</local.workers>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>hitz</groupId>
        <artifactId>virtuozo</artifactId>
        <version>1.0.0</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- GWT -->
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-user</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-servlet</artifactId>
      <version>${gwt.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- virtuozo Dependencies -->
    <dependency>
      <groupId>hitz</groupId>
      <artifactId>virtuozo-bootstrap</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>hitz</groupId>
      <artifactId>virtuozo-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>hitz</groupId>
      <artifactId>virtuozo-rest-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>hitz</groupId>
      <artifactId>virtuozo-widgets</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>hitz</groupId>
      <artifactId>virtuozo-themes</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>hitz</groupId>
      <artifactId>virtuozo-core</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>hitz</groupId>
      <artifactId>virtuozo-commons</artifactId>
    </dependency>
  </dependencies>

  <profiles>
    <profile>
      <id>gwt</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>gwt-maven-plugin</artifactId>
            <version>${gwt.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>compile</goal>
                  <goal>test</goal>
                  <goal>i18n</goal>
                  <goal>generateAsync</goal>
                </goals>
              </execution>
            </executions>
            <!-- Plugin configuration. There are many available options, 
              see gwt-maven-plugin documentation at codehaus.org -->
            <configuration>
              <module>hitz.virtuozo.Kickstart</module>
              <runTarget>index.html</runTarget>

              <hostedWebapp>${webappDirectory}</hostedWebapp>
              <warSourceDirectory>${webappDirectory}/kickstart/target/kickstart</warSourceDirectory>
              <style>${gwt.style}</style>
              <i18nMessagesBundle>${messages.bundle}</i18nMessagesBundle>
              <i18nConstantsWithLookupBundle>${constants.bundle}</i18nConstantsWithLookupBundle>
              <localWorkers>2</localWorkers>
              <logLevel>${log.level}</logLevel>
              <optimizationLevel>${optimization.level}</optimizationLevel>
              <extraJvmArgs>-XX:MaxPermSize=1024m -Xms512m -Xmx2048m</extraJvmArgs>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <build>
    <finalName>kickstart</finalName>

    <!-- Generate compiled stuff in the folder used for developing mode -->
    <outputDirectory>${webappDirectory}/WEB-INF/classes</outputDirectory>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.0</version>
        <configuration>
          <source>${java.compiler.version}</source>
          <target>${java.compiler.version}</target>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.4</version>
        <configuration>
          <webResources>
            <resource>
              <directory>src/main/java</directory>
              <targetPath>WEB-INF/classes</targetPath>
              <includes>
                <include>**/*.java</include>
              </includes>
            </resource>
          </webResources>
        </configuration>
      </plugin>

      <!-- Jetty plugin -->
      <plugin>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>maven-jetty-plugin</artifactId>
        <version>6.1.15</version>
        <configuration>
          <contextPath>/</contextPath>
          <scanIntervalSeconds>2</scanIntervalSeconds>
          <webAppSourceDirectory>${webappDirectory}</webAppSourceDirectory>
          <connectors>
            <connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
              <port>8080</port>
              <maxIdleTime>60000</maxIdleTime>
            </connector>
          </connectors>
        </configuration>
        <executions>
          <execution>
            <id>start-jetty</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <scanIntervalSeconds>0</scanIntervalSeconds>
              <daemon>true</daemon>
            </configuration>
          </execution>
          <execution>
            <id>stop-jetty</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>